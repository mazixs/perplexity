name: Build, Check and Publish PKGBUILD

on:
  push:
    tags:
      - 'v*'
  pull_request:
    paths:
      - 'aur/**'
      - '.github/workflows/aur.yml'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 2

      - name: Validate tag format
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          if [[ ! "$GITHUB_REF_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
            echo "‚ùå Invalid tag format. Expected: v1.2.3 or v1.2.3.4, got: $GITHUB_REF_NAME"
            exit 1
          fi
          echo "‚úÖ Tag format is valid: $GITHUB_REF_NAME"

      - name: Verify assets exist
        run: |
          echo "üîç Checking required files..."
          for file in aur/PKGBUILD aur/launcher.sh aur/perplexity.desktop aur/perplexity.png aur/default.conf; do
            if [[ ! -f "$file" ]]; then
              echo "‚ùå Missing required file: $file"
              exit 1
            fi
            echo "‚úÖ Found: $file"
          done

      - name: Update PKGBUILD version for tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          echo "üè∑Ô∏è Updating to version: $TAG_VERSION"

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è
          if [[ ! "$TAG_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
            echo "‚ùå Invalid version format: $TAG_VERSION"
            exit 1
          fi

          # –°–æ–∑–¥–∞–µ–º backup
          cp aur/PKGBUILD aur/PKGBUILD.backup
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é
          sed -i "s/pkgver=.*/pkgver='$TAG_VERSION'/" aur/PKGBUILD
          sed -i "s/pkgrel=.*/pkgrel=1/" aur/PKGBUILD
          
          echo "‚úÖ Updated PKGBUILD version to $TAG_VERSION"

      - name: Show PKGBUILD changes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "üìù PKGBUILD changes:"
          if [[ -f aur/PKGBUILD.backup ]]; then
            diff -u aur/PKGBUILD.backup aur/PKGBUILD || true
          fi
          echo ""
          echo "üìã Current PKGBUILD content:"
          cat aur/PKGBUILD

      - name: Test PKGBUILD syntax
        run: |
          echo "üß™ Testing PKGBUILD syntax..."
          # –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
          bash -n aur/PKGBUILD
          echo "‚úÖ PKGBUILD syntax is valid"

      - name: Publish to AUR
        if: startsWith(github.ref, 'refs/tags/')
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgname: perplexity
          pkgbuild: aur/PKGBUILD
          assets: |
            aur/launcher.sh
            aur/perplexity.desktop
            aur/perplexity.png
            aur/default.conf
          updpkgsums: true
          test: true
          test_flags: '--clean --cleanbuild --syncdeps --noconfirm'
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update to ${{ github.ref_name }}"

      - name: Success notification
        if: success() && startsWith(github.ref, 'refs/tags/')
        run: |
          echo "üéâ Successfully published ${{ github.ref_name }} to AUR!"
          echo "üì¶ Package: perplexity"
          echo "üîó AUR URL: https://aur.archlinux.org/packages/perplexity"
          echo "‚è∞ Published at: $(date)"

      - name: Cleanup
        if: always()
        run: |
          rm -f aur/PKGBUILD.backup
