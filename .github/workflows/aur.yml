name: Build, Publish Binary, and Update AUR

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base

    steps:
      # 1. –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      # 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      - name: Set up environment
        run: |
          pacman-key --init
          pacman-key --populate archlinux
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git libarchive
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown -R builder:builder aur || true

      # 3. –°–±–æ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
      - name: Build binary package
        run: sudo -u builder bash -c "cd aur && find . -name '*.pkg.tar.zst' -delete && makepkg --clean --syncdeps --noconfirm -f"

      # 4. –£–∑–Ω–∞—ë–º –∏–º—è –ø–æ–ª—É—á–∏–≤—à–µ–≥–æ—Å—è —Ñ–∞–π–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ output
      - name: Get built package name
        id: pkg
        run: |
          PKGFILE=$(cd aur && ls *.pkg.tar.zst | head -n1)
          echo "pkgfile=$PKGFILE" >> "$GITHUB_OUTPUT"

      # 5. –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∏–Ω–∞—Ä—å –≤ Release
      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: binary-${{ github.sha }}
          name: Binary Release ${{ github.sha }}
          files: aur/${{ steps.pkg.outputs.pkgfile }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 6. –û–±–Ω–æ–≤–ª—è–µ–º PKGBUILD –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º .SRCINFO
      - name: Update PKGBUILD and .SRCINFO for AUR
        shell: bash
        env:
          PKGFILE: ${{ steps.pkg.outputs.pkgfile }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          set -euo pipefail
          cd aur

          # --- —Ä–∞–∑–±–∏—Ä–∞–µ–º –∏–º—è –ø–∞–∫–µ—Ç–∞ ---
          if [[ "${PKGFILE}" =~ perplexity-([0-9.]+)-([0-9]+)-x86_64\.pkg\.tar\.zst ]]; then
            PKGVER="${BASH_REMATCH[1]}"
            PKGREL="${BASH_REMATCH[2]}"
          else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–µ—Ä—Å–∏—é –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞: ${PKGFILE}" >&2
            exit 1
          fi

          # --- –ø–∞—Ç—á–∏–º PKGBUILD ---
          sed -i -e "s/^pkgver=.*/pkgver=${PKGVER}/" \
                 -e "s/^pkgrel=.*/pkgrel=${PKGREL}/" \
                 -e "s|^source=.*|source=(\"${PKGFILE}::https://github.com/mazixs/perplexity/releases/download/binary-${GITHUB_SHA}/${PKGFILE}\")|" \
                 PKGBUILD

          # sha256sums ‚Üí 'SKIP'
          awk 'BEGIN{print "sha256sums=( '\''SKIP'\'' )"} !/^sha256sums=/' PKGBUILD > PKGBUILD.new && mv PKGBUILD.new PKGBUILD

          # .SRCINFO
          sudo -u builder makepkg --printsrcinfo > .SRCINFO

      # 7. –ü—É—à –≤ AUR
      - name: Push to AUR
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgname: perplexity
          pkgbuild: aur/PKGBUILD
          assets: |
            aur/.SRCINFO
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email:    ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message:  "Update to binary ${{ steps.pkg.outputs.pkgfile }}"

      # 8. –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥–∏
      - name: Success notification
        if: success()
        run: |
          echo "üéâ Successfully published ${{ steps.pkg.outputs.pkgfile }} to GitHub Releases and updated AUR!"
          echo "üîó AUR URL: https://aur.archlinux.org/packages/perplexity"
