name: Build PKGBUILD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 2

      - name: Verify assets exist
        run: |
          echo "🔍 Checking required files..."
          for file in aur/PKGBUILD aur/launcher.sh aur/perplexity.desktop aur/perplexity.png aur/default.conf; do
            if [[ ! -f "$file" ]]; then
              echo "❌ Missing required file: $file"
              exit 1
            fi
            echo "✅ Found: $file"
          done

      - name: Test PKGBUILD syntax
        run: |
          echo "🧪 Testing PKGBUILD syntax..."
          bash -n aur/PKGBUILD
          echo "✅ PKGBUILD syntax is valid"

      - name: Install system dependencies
        run: |
          docker run --rm -v "$PWD/aur:/build" -w /build archlinux:base-devel bash -c "
            pacman -Syu --noconfirm && 
            pacman -S --noconfirm --needed git base-devel namcap nodejs npm
          "

      - name: Test package build with makepkg
        run: |
          docker run --rm -v "$PWD/aur:/build" -w /build archlinux:base-devel bash -c "
            pacman -Syu --noconfirm && 
            pacman -S --noconfirm --needed git base-devel namcap nodejs npm && 
            useradd -m builder && 
            echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers && 
            chown -R builder . && 
            sudo -u builder makepkg --nobuild --nodeps --skipinteg && 
            sudo -u builder makepkg --printsrcinfo > .SRCINFO && 
            echo 'Generated .SRCINFO:' && 
            cat .SRCINFO
          "

      - name: Validate PKGBUILD with namcap
        run: |
          docker run --rm -v "$PWD/aur:/build" -w /build archlinux:base-devel bash -c "
            pacman -Syu --noconfirm && 
            pacman -S --noconfirm --needed namcap && 
            namcap PKGBUILD || echo 'namcap warnings found (non-critical)'
          "

      - name: Build binary package (full build)
        run: |
          docker run --rm -v "$PWD/aur:/build" -w /build archlinux:base-devel bash -c "
            pacman -Syu --noconfirm && 
            pacman -S --noconfirm --needed git base-devel nodejs npm && 
            useradd -m builder && 
            echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers && 
            chown -R builder . && 
            sudo -u builder makepkg -fs --noconfirm && 
            ls -lh *.pkg.tar.zst
          "

      - name: Clean old artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const oldArtifacts = artifacts.data.artifacts
              .filter(artifact => artifact.name.startsWith('perplexity-pkg-'))
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
              .slice(3); // Keep only 3 most recent
            
            for (const artifact of oldArtifacts) {
              console.log(`Deleting old artifact: ${artifact.name}`);
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
            }

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        with:
          name: perplexity-pkg-${{ github.sha }}
          path: aur/*.pkg.tar.zst
          retention-days: 7