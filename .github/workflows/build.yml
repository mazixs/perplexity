name: Build & Test PKGBUILD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      # 1) Установка системных зависимостей (root, sudo не нужен)
      - name: Install system dependencies
        run: |
          pacman -Syu --noconfirm git base-devel nodejs npm

      # 2) Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 3) Проверка наличия PKGBUILD и .SRCINFO
      - name: Verify PKGBUILD & .SRCINFO
        run: |
          for f in aur/PKGBUILD aur/.SRCINFO; do
            [[ -f $f ]] || { echo "❌ Missing $f"; exit 1; }
          done
          echo "✅ PKGBUILD and .SRCINFO are present"

      # 4) Линтинг синтаксиса PKGBUILD
      - name: Test PKGBUILD syntax
        run: |
          bash -n aur/PKGBUILD
          echo "✅ PKGBUILD syntax valid"

      # 5) Подготовка изолированного каталога build/
      - name: Prepare build directory
        run: |
          rm -rf build
          mkdir build
          cp -r aur/* build/
          echo "Files in build/:"
          ls -1 build

      # 6) Проверка доступности всех source-файлов (без сборки)
      - name: Test source availability
        run: |
          cd build
          makepkg --nobuild --syncdeps --nocheck
          echo "✅ All source files are available"

      # 7) Полная сборка при пуше тега
      - name: Full build for tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build
          makepkg -fs --noconfirm
          # сохраняем путь к пакету для Release
          echo "PACKAGE_FILE=build/$(ls *.pkg.tar.zst | head -n1)" >> $GITHUB_ENV

      # 8) Полная сборка при ручном запуске
      - name: Full build for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd build
          makepkg -fs --noconfirm
          ls -lh *.pkg.tar.zst

      # 9) Загрузка артефакта для ручного тестирования
      - name: Upload build artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: build-pkg-${{ github.run_id }}
          path: build/*.pkg.tar.zst
          retention-days: 7

      # 10) Создание GitHub Release при теге
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.PACKAGE_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}