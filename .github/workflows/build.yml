name: Build & Test PKGBUILD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      # 1) Кэш Pacman-пакетов для ускорения
      - name: Cache pacman packages
        uses: actions/cache@v4
        with:
          path: /var/cache/pacman/pkg
          key: ${{ runner.os }}-pacman-${{ hashFiles('aur/PKGBUILD') }}
          restore-keys: |
            ${{ runner.os }}-pacman-

      # 2) Установка зависимостей
      - name: Install system packages
        run: sudo pacman -Syu --noconfirm git base-devel nodejs npm

      # 3) Checkout репозитория
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 4) Проверка наличия PKGBUILD и .SRCINFO + синтаксис
      - name: Verify PKGBUILD and .SRCINFO
        run: |
          for f in aur/PKGBUILD aur/.SRCINFO; do
            [[ -f "$f" ]] || { echo "❌ Missing $f"; exit 1; }
          done
          bash -n aur/PKGBUILD
          echo "✅ PKGBUILD syntax valid"

      # 5) Подготовка изолированного build-каталога
      - name: Prepare build directory
        run: |
          BUILD_DIR=$(mktemp -d)
          echo "### Build directory: $BUILD_DIR"
          cp -r aur/* "$BUILD_DIR"
          ls -R "$BUILD_DIR"
        id: prep

      # 6) Тест доступности source-файлов (без сборки)
      - name: Test source availability
        run: |
          cd "${{ steps.prep.outputs.BUILD_DIR }}"
          makepkg --nobuild --syncdeps --skipinteg --nocheck
          
      # 7) Полная сборка при пуше тега
      - name: Full build for release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd "${{ steps.prep.outputs.BUILD_DIR }}"
          makepkg -fs --noconfirm
          echo "ARTIFACT=$(ls *.pkg.tar.zst)" >> $GITHUB_ENV

      # 8) Полная сборка при ручном запуске
      - name: Full build for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd "${{ steps.prep.outputs.BUILD_DIR }}"
          makepkg -fs --noconfirm
          ls -lh *.pkg.tar.zst

      # 9) Загрузка артефакта (manual only)
      - name: Upload build artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: build-pkg-${{ github.run_id }}
          path: ${{ steps.prep.outputs.BUILD_DIR }}/*.pkg.tar.zst
          retention-days: 7

      # 10) Создание GitHub Release (только теги)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ARTIFACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}