name: Build & Test PKGBUILD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      # 1. Ставим все нужные пакеты
      - name: Install dependencies (pacman + sudo)
        run: |
          pacman -Syu --noconfirm git base-devel nodejs npm sudo

      # 2. Чекаут репозитория
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 3. Создаём build-пользователя и назначаем права
      - name: Create builder user
        run: |
          useradd -m builder
          chown -R builder:builder .

      # 4. Проверяем наличие PKGBUILD и .SRCINFO
      - name: Check PKGBUILD and .SRCINFO presence
        run: |
          [[ -f aur/PKGBUILD ]] || { echo "No PKGBUILD"; exit 1; }
          [[ -f aur/.SRCINFO ]] || { echo "No .SRCINFO"; exit 1; }
          bash -n aur/PKGBUILD
          echo "✅ PKGBUILD & .SRCINFO OK"

      # 5. Готовим папку для сборки и назначаем права
      - name: Prepare build dir
        run: |
          rm -rf build
          mkdir build
          cp -r aur/* build/
          chown -R builder:builder build

      # 6. Проверка source-файлов (dry-run, без сборки)
      - name: Test sources availability
        run: |
          runuser -u builder -- bash -c "cd build && makepkg --nobuild --syncdeps --nocheck"
          echo "✅ All sources available"

      # 7. Полный билд (только для тегов и manual)
      - name: Full build for tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          runuser -u builder -- bash -c "cd build && makepkg -fs --noconfirm"
          echo "PACKAGE_FILE=build/$(ls build/*.pkg.tar.zst | head -n1)" >> $GITHUB_ENV

      - name: Full build for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          runuser -u builder -- bash -c "cd build && makepkg -fs --noconfirm"
          ls -lh build/*.pkg.tar.zst

      # 8. Загрузка артефакта для ручного теста
      - name: Upload build artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: build-pkg-${{ github.run_id }}
          path: build/*.pkg.tar.zst
          retention-days: 7

      # 9. Release (для тегов)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.PACKAGE_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}