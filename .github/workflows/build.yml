name: Build & Test PKGBUILD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      # 1. –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (root)
      - name: Install base system deps
        run: |
          pacman -Syu --noconfirm git base-devel nodejs npm sudo

      # 2. –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 3. –°–æ–∑–¥–∞—ë–º –Ω–µ–ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è makepkg
      - name: Add builder user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown -R builder:builder .

      # 4. –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ PKGBUILD
      - name: Verify PKGBUILD & .SRCINFO
        run: |
          for f in aur/PKGBUILD aur/.SRCINFO; do
            [[ -f "$f" ]] || { echo "‚ùå Missing $f"; exit 1; }
          done
          bash -n aur/PKGBUILD
          echo "‚úÖ PKGBUILD syntax OK"

      # 5. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ build/ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ source-tarball
      - name: Prepare build directory + source tarball
        run: |
          rm -rf build && mkdir build
          cp -r aur/* build/
          # --- —Å–æ–∑–¥–∞—ë–º perplexity-<version>.tar.gz ---
          VERSION=$(grep '^pkgver=' build/PKGBUILD | cut -d= -f2)
          tar czf build/perplexity-${VERSION}.tar.gz \
              --transform "s,^,perplexity-${VERSION}/," \
              -C src .
          # -------------------------------------------
          chown -R builder:builder build
          echo "üìÇ build/ contents:"
          ls -1 build

      # 6. dry-run: –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å source-—Ñ–∞–π–ª–æ–≤
      - name: makepkg --nobuild (no deps)
        run: |
          runuser -u builder -- bash -lc \
            "cd build && makepkg --nobuild --nodeps --skipinteg"
          echo "‚úÖ Source files OK"

      # 7. –ü–æ–ª–Ω—ã–π –±–∏–ª–¥ –¥–ª—è main –≤–µ—Ç–∫–∏
      - name: Full build for main branch
        if: github.ref == 'refs/heads/main'
        run: |
          runuser -u builder -- bash -lc \
            "cd build && makepkg -f --nodeps --skipinteg --nocheck"
          echo "PACKAGE_FILE=build/$(ls build/*.pkg.tar.zst | head -n1)" >> $GITHUB_ENV

      # 8. –ü–æ–ª–Ω—ã–π –±–∏–ª–¥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
      - name: Full build for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          runuser -u builder -- bash -lc \
            "cd build && makepkg -f --nodeps --skipinteg --nocheck"
          ls -lh build/*.pkg.tar.zst

      # 9. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç (manual only)
      - name: Upload build artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: build-pkg-${{ github.run_id }}
          path: build/*.pkg.tar.zst
          retention-days: 7

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: "*.pkg.tar.zst"
          draft: false
          prerelease: false
          tag_name: "auto-${{ github.run_number }}"
          name: "Auto Release ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}