name: build-and-publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  BIN_DIR: aur        # Поменяйте на вашу папку с PKGBUILD для бинаря, если не в корне
  AUR_DIR: aur

jobs:
  build-bin:
    runs-on: ubuntu-latest
    container: archlinux:base
    outputs:
      sha: ${{ steps.vars.outputs.sha }}
      ver: ${{ steps.vars.outputs.ver }}
      rel: ${{ steps.vars.outputs.rel }}

    steps:
      - name: Prepare pacman keyring
        run: |
          pacman -Sy --noconfirm archlinux-keyring gnupg
          pacman-key --init
          pacman-key --populate archlinux

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: pacman -Syu --noconfirm base-devel git sudo

      - name: Create unprivileged builder
        run: |
          useradd -m builder
          echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          chown -R builder:builder .

      - name: Patch PKGBUILD with current commit sha
        run: |
          cd ${{ env.BIN_DIR }}
          sed -i "s|<COMMIT>|${{ github.sha }}|g" PKGBUILD
          sudo -u builder makepkg --printsrcinfo > .SRCINFO

      - name: Build package (.pkg.tar.zst)
        run: |
          cd ${{ env.BIN_DIR }}
          sudo -u builder makepkg --syncdeps --clean --cleanbuild --noconfirm --force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: arch-bin
          path: ${{ env.BIN_DIR }}/*.pkg.tar.zst

      - name: Create GitHub release with package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: binary-${{ github.sha }}
          name: Binary Release ${{ github.sha }}
          draft: false
          prerelease: false
          files: ${{ env.BIN_DIR }}/*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Export vars for downstream job
        id: vars
        run: |
          echo "sha=${GITHUB_SHA}"                               >> $GITHUB_OUTPUT
          echo "ver=$(grep '^pkgver=' ${{ env.BIN_DIR }}/PKGBUILD | cut -d= -f2)" >> $GITHUB_OUTPUT
          echo "rel=$(grep '^pkgrel=' ${{ env.BIN_DIR }}/PKGBUILD | cut -d= -f2)" >> $GITHUB_OUTPUT

  deploy-aur:
    needs: build-bin
    runs-on: ubuntu-latest
    container: archlinux:base

    steps:
      - name: Prepare pacman keyring
        run: |
          pacman -Sy --noconfirm archlinux-keyring gnupg
          pacman-key --init
          pacman-key --populate archlinux

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install auxiliary tools
        run: pacman -Syu --noconfirm git base-devel libarchive sudo

      - name: Create unprivileged builder
        run: |
          useradd -m builder
          echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          chown -R builder:builder .

      - name: Patch PKGBUILD with current commit sha
        run: |
          cd ${{ env.AUR_DIR }}
          sed -i "s|<COMMIT>|${{ github.sha }}|g" PKGBUILD
          sudo -u builder makepkg --printsrcinfo > .SRCINFO
