name: build-and-publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  PKG_DIR: aur        # Директория с PKGBUILD (AUR, сборка из source)

jobs:
  build-release-aur:
    runs-on: ubuntu-latest
    container: archlinux:base

    steps:
      - name: Prepare pacman keyring
        run: |
          pacman -Sy --noconfirm archlinux-keyring gnupg
          pacman-key --init
          pacman-key --populate archlinux

      - name: Checkout
        uses: actions/checkout@v5

      - name: Install build tools
        run: pacman -Syu --noconfirm base-devel git openssh sudo libarchive

      - name: Create unprivileged builder
        run: |
          useradd -m builder
          echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          chown -R builder:builder .

      - name: Patch PKGBUILD with current commit sha
        run: |
          cd ${{ env.PKG_DIR }}
          sed -i "s|<COMMIT>|${{ github.sha }}|g" PKGBUILD

      - name: Build package (.pkg.tar.zst)
        run: |
          cd ${{ env.PKG_DIR }}
          sudo -u builder makepkg --syncdeps --clean --cleanbuild --noconfirm --force

      - name: Generate .SRCINFO
        run: |
          cd ${{ env.PKG_DIR }}
          sudo -u builder makepkg --printsrcinfo > .SRCINFO

      - name: Collect version variables
        id: vars
        run: |
          cd ${{ env.PKG_DIR }}
          echo "ver=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)" >> $GITHUB_OUTPUT
          echo "rel=$(grep '^pkgrel=' PKGBUILD | cut -d= -f2)" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: arch-pkg
          path: ${{ env.PKG_DIR }}/*.pkg.tar.zst

      - name: Create GitHub release with package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.vars.outputs.ver }}-${{ steps.vars.outputs.rel }}
          name: Perplexity v${{ steps.vars.outputs.ver }}-${{ steps.vars.outputs.rel }}
          draft: false
          prerelease: false
          files: ${{ env.PKG_DIR }}/*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH for AUR
        run: |
          mkdir -p /home/builder/.ssh
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > /home/builder/.ssh/id_rsa
          chmod 600 /home/builder/.ssh/id_rsa
          echo "Host aur.archlinux.org" >> /home/builder/.ssh/config
          echo "  HostName aur.archlinux.org" >> /home/builder/.ssh/config
          echo "  User aur" >> /home/builder/.ssh/config
          echo "  IdentityFile ~/.ssh/id_rsa" >> /home/builder/.ssh/config
          echo "  StrictHostKeyChecking no" >> /home/builder/.ssh/config
          chown -R builder:builder /home/builder/.ssh

      - name: Clone AUR repository
        run: |
          sudo -u builder git clone ssh://aur@aur.archlinux.org/perplexity.git aur_repo || true
          if [ ! -d "aur_repo/.git" ]; then
            mkdir -p aur_repo
            cd aur_repo
            sudo -u builder git init
            sudo -u builder git remote add origin ssh://aur@aur.archlinux.org/perplexity.git
          fi

      - name: Push PKGBUILD to AUR
        run: |
          cd aur_repo
          cp ../${{ env.PKG_DIR }}/PKGBUILD .
          cp ../${{ env.PKG_DIR }}/.SRCINFO .
          # Copy auxiliary source files referenced by PKGBUILD
          cp ../${{ env.PKG_DIR }}/perplexity.desktop .
          cp ../${{ env.PKG_DIR }}/perplexity.png .
          cp ../${{ env.PKG_DIR }}/launcher.sh .
          cp ../${{ env.PKG_DIR }}/default.conf .
          
          sudo -u builder git config user.name "GitHub Actions"
          sudo -u builder git config user.email "actions@github.com"
          
          sudo -u builder git add PKGBUILD .SRCINFO perplexity.desktop perplexity.png launcher.sh default.conf
          sudo -u builder git commit -m "Update to v${{ steps.vars.outputs.ver }}-${{ steps.vars.outputs.rel }} (sha ${{ github.sha }})" || true
          sudo -u builder git push origin master || sudo -u builder git push origin main
